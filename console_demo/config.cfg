[auth]
db_user = auth_db_user
db_password = auth_db_password
db_catalog = auth_db_database
smtp_host = localhost
smtp_port = 25
mail_from = i-learned-python-in-a-weekend-and-wrote-this-for-you@some-site.com
mail_subject = Welcome to my console demo - Please confirm your email address
mail_body = This is just a placeholder. Thebackend module could be placed in a web application
    and get the email activation token via a GET request. An example link might look like this:
    
    http://www.some-site.com/?activate={ACTIVATION_TOKEN}&identifier={EMAIL_IDENTIFIER} (does not work!)
    
    Since this is just a poor mans implementation as a console app, you will have to copy the activation token into the prompt:
    Identifier:{EMAIL_IDENTIFIER}
    Activation token:{ACTIVATION_TOKEN}
mail_body_html =  <p>This is just a placeholder. The backend module could be placed in a web application
    and get the email activation token via a GET request. An example link might look like this:</p>
    
    <p>http://www.some-site.com/?activate={ACTIVATION_TOKEN}&identifier={EMAIL_IDENTIFIER} <b>(does not work!)</b></p>
    
    <p>Since this is just a poor mans implementation as a console app, you will have to copy the activation token and the identifier into the prompt:</p>
    <p>Identifier:<b>{EMAIL_IDENTIFIER}</b></p>
    <p>Activation token:<b>{ACTIVATION_TOKEN}</b></p>    
mail_activation_expire = 86400    
password_min_length = 6
login_max_attempts = 5
login_attempt_expire = 43200
